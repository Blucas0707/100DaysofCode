###################################################################################################################################################################
1. Function
def my_function():
  print("Hello")
my_function()

###################################################################################################################################################################
Exercise - Hurdles Loop challenge
visit:https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%201&url=worlds%2Ftutorial_en%2Fhurdle1.json

def turn_right():
    turn_left()
    turn_left()
    turn_left()
def one_wall():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
for i in range(6):
    one_wall()

###################################################################################################################################################################
2. Indentation (縮排)
def my_function():
  print("Hello")
spaces v.s. tabs
###################################################################################################################################################################
3. While Loop

While somethind_is_ture:
  do_something
  
for i in range(3):
  print(i)

i = 0
While i < 3:
  print(i)
  i += 1
###################################################################################################################################################################
Exercise - Hurdles Loop challenge 2
visit:https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%201&url=worlds%2Ftutorial_en%2Fhurdle1.json

def turn_right():
    turn_left()
    turn_left()
    turn_left()
def one_wall():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()

while not at_goal():
    one_wall()
###################################################################################################################################################################
Exercise - Hurdles Loop challenge 3 
visit:https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%203&url=worlds%2Ftutorial_en%2Fhurdle3.json
###
What you need to know
The functions move() and turn_left().
The conditions front_is_clear() or wall_in_front(), at_goal(), and their negation.
How to use a while loop and an if statement.
###

def turn_right():
    turn_left()
    turn_left()
    turn_left()
def one_wall():
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()

while not at_goal():
    if front_is_clear():
        move()
    elif wall_in_front():
        one_wall()
###################################################################################################################################################################
Exercise - Hurdles Loop challenge 4
visit:https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%203&url=worlds%2Ftutorial_en%2Fhurdle3.json
###
What you need to know
The functions move() and turn_left().
The conditions front_is_clear() or wall_in_front(), at_goal(), and their negation.
How to use a while loop and an if statement.
###

def turn_right():
    turn_left()
    turn_left()
    turn_left()
def one_wall():
    turn_left()
    move()
    while wall_on_right():
        move()
    turn_right()
    move()
    turn_right()
    move()
    while wall_on_right() and not wall_in_front():
        move()
    turn_left()
    
while not at_goal():
    if front_is_clear():
        move()
    elif wall_in_front():
        one_wall()
        
###################################################################################################################################################################
Exercise - Hurdles Loop challenge 5 (Maze)
visit:https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%203&url=worlds%2Ftutorial_en%2Fhurdle3.json
###

def turn_right():
    turn_left()
    turn_left()
    turn_left()
time = 0
while not at_goal():
    if time == 4:
        time = 0
        turn_left()
    if right_is_clear():
        time += 1
        turn_right()
        move()   
    elif not right_is_clear() and not wall_in_front():
        move()
    else:
        turn_left()
        
 #################
 Solution-2
 #################
 def turn_right():
    turn_left()
    turn_left()
    turn_left()
while front_is_clear():
  move()
turn_left()

while not at_goal():
    if right_is_clear():
        turn_right()
        move()   
    elif not right_is_clear() and not wall_in_front():
        move()
    else:
        turn_left()
 
        
        

